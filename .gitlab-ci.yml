image:
  name: docker:19.03.1

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  
stages:
  - build
  - deploy-stage
  - deploy-prod

build:
  stage: build
  before_script:
  - export CURRENT_COMMIT=${CI_COMMIT_SHA::8}
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --build-arg build_env=prod -f docker/Dockerfile --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --tag $CI_REGISTRY_IMAGE:$CURRENT_COMMIT .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CURRENT_COMMIT
  only:
    - dev
    - feature/certification
  tags:
    - stage

deploy_stage:
  stage: deploy-stage
  variables:
    KUBE_API_CA: $STAGE_KUBE_API_CA
    KUBE_API_SERVER: $STAGE_KUBE_API_SERVER
    KUBE_API_USERNAME: $STAGE_KUBE_API_USERNAME
    KUBE_API_PASSWORD: $STAGE_KUBE_API_PASSWORD
  image: registry.gitlab.qsoft.ru/system-software/k8s-tool:latest
  script:
    - kubeval docker/deploy.yaml
    - kubectl -n $STAGE_KUBE_NAMESPACE apply -f docker/deploy.yaml
    - kubectl -n $STAGE_KUBE_NAMESPACE rollout restart deployment mercado-pago-backend
  only:
    - dev
    - feature/certification
  tags:
    - stage

deploy_prod:
  stage: deploy-prod
  variables:
    GIT_STRATEGY: none
    KUBE_API_CA: $PROD_KUBE_API_CA
    KUBE_API_SERVER: $PROD_KUBE_API_SERVER
    KUBE_API_TOKEN: $PROD_KUBE_API_TOKEN
    KUBE_DEPLOYMENT_NAME: $PROD_KUBE_DEPLOYMENT_NAME
  image: registry.gitlab.qsoft.ru/system-software/k8s-tool:latest
  script:
    - kubectl -n $PROD_KUBE_NAMESPACE rollout restart deployment mercado-pago-backend
  needs:
    - job: build
  tags:
    - prod
  only:
    - dev
    - feature/certification
  when: manual
